1. 
Каким будет результат следующей операции на языке JavaScript: [1, 2, 3] + [4, 5, 6]. Почему был получен такой результат?

Результатом будет строка   "1, 2, 34, 5, 6". В этом случае оператор "+" преобразует массивы в строчки и произведет их конкатенацию.
Так происходит из-за того что оператор "+" нужен для конкатенации строк или сложения чисел.

2. 
Дано выражение:
var a = {b: 1};
var b = a;
b.b = 2;
console.log(a);
Что будет выведено в консоли? Почему был получен такой результат?

Объекты в js хранятся по ссылкам. Это значит, что в переменную b записывается ссылка на объект а. В этом случае 
b.b = 2; в этой строчке мы на самом деле меняем свойство объекта а. Результатом будет {b: 2}

3. 
Написать регулярное выражение, совпадающее с числом с плавающей точкой с точностью до 3 знака после запятой.

/^\d+(\.\d{1,3})?$/

4. 
Написать регулярное выражение, по которому определяется является ли строка ссылкой. Объяснить, как оно работает.
Пример:
const isURL = str => true
isURL(‘https://example.com’)
isURL(‘http://www.example.com’)

const isURL = str => /^https?:\/\/\w+\.\w+$/.test(str);

^ - начало строки.
https? - соответствует "http" или "https". Знак ? делает предыдущий символ (s) необязательным, что позволяет нам поддерживать оба протокола.
:\/\/ - соответствует символам "://", которые присутствуют в каждой URL после протокола
\w+ - соответствует одному или более буквенно-цифровым символам
\. - соответствует точке
\w+ - снова соответствует одному или более буквенно-цифровым символам 
$ - конец строки.

5.
Каким будет значение переменной text после выполнения данного JavaScript кода? 
function setText(message) { 
    text = message;
 }
 var text = 'Текст';
 setText('Сообщение');
Опишите, почему получился такой результат.

В этом случае, text внутри функции становится глобальной переменной.
В результате, после выполнения кода, значение глобальной переменной text будет изменено на 'Сообщение'.

6.
function test(){
  const storage = []
  const ids = document.querySelectorAll('._product')
  ids.forEach(item => storage.push(item.getAttribute("data-id")))
  return storage
}
test()

7.
function findAllProperties() {
  const blocks = document.querySelectorAll(".tab-pane-product-parameter-item");
  const product = {};

  blocks.forEach((block) => {
    product[block.firstElementChild.textContent.trim().split("\n")[0].trim()] =
      block.lastElementChild.textContent;
  });

  return product;
}
findAllProperties();
